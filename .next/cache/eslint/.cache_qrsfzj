[{"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\auth\\signin.js":"1","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\auth\\signout.js":"2","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\auth\\signup.js":"3","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\index.js":"4","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\posts\\create-post.js":"5","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\posts\\index.js":"6","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\posts\\[...postId].js":"7","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\premium.js":"8","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\topics\\[topicSlug].js":"9","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\users\\my-profile.js":"10","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\users\\notifications.js":"11","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\users\\settings\\saved-posts.js":"12","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\users\\settings\\update-my-profile.js":"13","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\users\\settings\\update-password.js":"14","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\users\\[...oneUser].js":"15","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\_app.js":"16","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\_document.js":"17","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bannerOptions\\ChangePasswordOption.js":"18","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bannerOptions\\CopyOption.js":"19","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bannerOptions\\DeleteOption.js":"20","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bannerOptions\\EditOption.js":"21","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bannerOptions\\SavedOptions.js":"22","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bannerOptions\\SaveOption.js":"23","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bars\\ArrowBar.js":"24","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bars\\BottomBar.js":"25","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bars\\Layer.js":"26","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bars\\SideBar.js":"27","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bars\\TopBar.js":"28","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\activity\\CommentType.js":"29","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\activity\\FollowType.js":"30","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\activity\\LikeType.js":"31","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\ArrowIcon.js":"32","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\CommentIcon.js":"33","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\CopyLinkIcon.js":"34","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\DeleteIcon.js":"35","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\EditIcon.js":"36","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\LikeSet.js":"37","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\LogoIcon.js":"38","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\MoreIcon.js":"39","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\NewPostIcon.js":"40","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\NotifitcationIcon.js":"41","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\ProfileIcon.js":"42","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\SaveIcon.js":"43","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\UnsaveIcon.js":"44","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\items\\Activity.js":"45","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\items\\Comment.js":"46","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\items\\Post.js":"47","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\lists\\ActivityList.js":"48","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\lists\\CommentList.js":"49","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\lists\\PostList.js":"50","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\SingleButton.js":"51"},{"size":1707,"mtime":1640637494213,"results":"52","hashOfConfig":"53"},{"size":674,"mtime":1640600175620,"results":"54","hashOfConfig":"53"},{"size":2775,"mtime":1640534347872,"results":"55","hashOfConfig":"53"},{"size":929,"mtime":1638655389413,"results":"56","hashOfConfig":"53"},{"size":5720,"mtime":1640534375603,"results":"57","hashOfConfig":"53"},{"size":953,"mtime":1640533010656,"results":"58","hashOfConfig":"53"},{"size":9317,"mtime":1640600231530,"results":"59","hashOfConfig":"53"},{"size":3179,"mtime":1636896947141,"results":"60","hashOfConfig":"53"},{"size":1205,"mtime":1640029748432,"results":"61","hashOfConfig":"53"},{"size":3793,"mtime":1640030189939,"results":"62","hashOfConfig":"53"},{"size":2812,"mtime":1638556313573,"results":"63","hashOfConfig":"53"},{"size":1762,"mtime":1640030422842,"results":"64","hashOfConfig":"53"},{"size":5829,"mtime":1640563226889,"results":"65","hashOfConfig":"53"},{"size":4248,"mtime":1640563244366,"results":"66","hashOfConfig":"53"},{"size":5274,"mtime":1640534382490,"results":"67","hashOfConfig":"53"},{"size":1145,"mtime":1640600494699,"results":"68","hashOfConfig":"53"},{"size":482,"mtime":1640600500217,"results":"69","hashOfConfig":"53"},{"size":9942,"mtime":1639239787454,"results":"70","hashOfConfig":"53"},{"size":445,"mtime":1638109813775,"results":"71","hashOfConfig":"53"},{"size":424,"mtime":1639778922349,"results":"72","hashOfConfig":"53"},{"size":412,"mtime":1639869934777,"results":"73","hashOfConfig":"53"},{"size":349,"mtime":1639239682791,"results":"74","hashOfConfig":"53"},{"size":699,"mtime":1640534187788,"results":"75","hashOfConfig":"53"},{"size":1599,"mtime":1639577450543,"results":"76","hashOfConfig":"53"},{"size":818,"mtime":1638172730337,"results":"77","hashOfConfig":"53"},{"size":526,"mtime":1639776549681,"results":"78","hashOfConfig":"53"},{"size":8016,"mtime":1640272022288,"results":"79","hashOfConfig":"53"},{"size":1008,"mtime":1634572345771,"results":"80","hashOfConfig":"53"},{"size":2009,"mtime":1638215186134,"results":"81","hashOfConfig":"53"},{"size":579,"mtime":1638215214536,"results":"82","hashOfConfig":"53"},{"size":649,"mtime":1638215860407,"results":"83","hashOfConfig":"53"},{"size":625,"mtime":1638215026945,"results":"84","hashOfConfig":"53"},{"size":2039,"mtime":1638215041939,"results":"85","hashOfConfig":"53"},{"size":1415,"mtime":1638215048906,"results":"86","hashOfConfig":"53"},{"size":1514,"mtime":1639751271660,"results":"87","hashOfConfig":"53"},{"size":922,"mtime":1638215066735,"results":"88","hashOfConfig":"53"},{"size":2373,"mtime":1640534207720,"results":"89","hashOfConfig":"53"},{"size":2135,"mtime":1638215106406,"results":"90","hashOfConfig":"53"},{"size":1903,"mtime":1639238348653,"results":"91","hashOfConfig":"53"},{"size":691,"mtime":1638215120897,"results":"92","hashOfConfig":"53"},{"size":925,"mtime":1638215128657,"results":"93","hashOfConfig":"53"},{"size":699,"mtime":1638215137476,"results":"94","hashOfConfig":"53"},{"size":435,"mtime":1638215143956,"results":"95","hashOfConfig":"53"},{"size":1156,"mtime":1640534244798,"results":"96","hashOfConfig":"53"},{"size":2208,"mtime":1639326094157,"results":"97","hashOfConfig":"53"},{"size":2582,"mtime":1640534325042,"results":"98","hashOfConfig":"53"},{"size":5893,"mtime":1640533663694,"results":"99","hashOfConfig":"53"},{"size":2370,"mtime":1640601287262,"results":"100","hashOfConfig":"53"},{"size":1042,"mtime":1640533854433,"results":"101","hashOfConfig":"53"},{"size":1000,"mtime":1640533842548,"results":"102","hashOfConfig":"53"},{"size":413,"mtime":1632898836584,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xll2n5",{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\auth\\signin.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\auth\\signout.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\auth\\signup.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\posts\\create-post.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\posts\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\posts\\[...postId].js",["217","218","219"],"import Link from 'next/link';\r\nimport Router from 'next/router';\r\nimport { useState } from 'react';\r\nimport Comment from '../../components/items/Comment';\r\nimport Cookies from 'js-cookie';\r\nimport useRequest from '../../hooks/use-request';\r\nimport TopBar from '../../components/bars/TopBar';\r\nimport LikeSet from '../../components/Icons/LikeSet';\r\nimport SaveOption from '../../components/bannerOptions/SaveOption';\r\nimport CopyOption from '../../components/bannerOptions/CopyOption';\r\nimport DeleteOption from '../../components/bannerOptions/DeleteOption';\r\nimport EditOption from '../../components/bannerOptions/EditOption';\r\nimport SideBar from '../../components/bars/SideBar';\r\nimport CommentList from '../../components/lists/CommentList';\r\nimport CommentIcon from '../../components/Icons/CommentIcon';\r\nimport BottomBar from '../../components/bars/BottomBar';\r\nimport showStyles from '../../styles/Show.module.css';\r\nimport componentStyles from '../../styles/Components.module.css';\r\nimport Layer from '../../components/bars/Layer';\r\nimport buildClient from '../../api/build-client';\r\nimport MoreIcon from '../../components/Icons/MoreIcon';\r\n\r\nconst PostShow = ({ data: { post }, data }) => {\r\n  const [editOpt, setEditOpt] = useState(false);\r\n  const [deleteOpt, setDeleteOpt] = useState(false);\r\n  const [active, setActive] = useState(false);\r\n  const [banner, setBanner] = useState(false);\r\n  const [postContent, setPostContent] = useState(post.content);\r\n  const [content, setContent] = useState('');\r\n  const [comments, setComment] = useState([]);\r\n  const [commCount, setCommCount] = useState(post.comments.length);\r\n\r\n  const { doRequest, errors } = useRequest({\r\n    url: `/api/comments/${post._id}`,\r\n    method: 'post',\r\n    headers: { Authorization: 'Bearer ' + Cookies.get('jwt') },\r\n    body: {\r\n      content,\r\n    },\r\n  });\r\n  const { doRequest: deleteRequest, errors: errs } = useRequest({\r\n    url: `/api/posts/${post._id}`,\r\n    method: 'delete',\r\n    headers: { Authorization: 'Bearer ' + Cookies.get('jwt') },\r\n    onSuccess: () => Router.push('/users/my-profile'),\r\n  });\r\n  const { doRequest: editRequest, errors: ers } = useRequest({\r\n    url: `/api/posts/${post._id}`,\r\n    method: 'put',\r\n    body: {\r\n      content: postContent,\r\n    },\r\n    headers: { Authorization: 'Bearer ' + Cookies.get('jwt') },\r\n  });\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (content.length < 4 || content.length > 30) {\r\n      return;\r\n    }\r\n\r\n    const res = await doRequest();\r\n\r\n    if (res) {\r\n      setContent('');\r\n      setCommCount((oldState) => oldState + 1);\r\n      setComment((oldState) => [res, ...oldState]);\r\n    }\r\n  };\r\n  const btnCancel = () => {\r\n    setContent('');\r\n    setActive(false);\r\n  };\r\n  const renderedComments = comments.map((res) => (\r\n    <Comment key={res.createdAt} comment={res} />\r\n  ));\r\n\r\n  const deletePost = (e) => {\r\n    e.preventDefault();\r\n\r\n    deleteRequest();\r\n  };\r\n  const editReset = () => {\r\n    setPostContent(post.content);\r\n    setEditOpt(false);\r\n  };\r\n  const editPost = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const res = await editRequest();\r\n    if (res) {\r\n      setEditOpt(false);\r\n    } else {\r\n      setPostContent(post.content);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <TopBar />\r\n      <SideBar />\r\n      <Layer />\r\n      <div className={showStyles.showWrap}>\r\n        <div className={showStyles.post}>\r\n          <div className={showStyles.postTop}>\r\n            <Link href='/topics/[topicSlug]' as={`/topics/${post.slug}`}>\r\n              <a>\r\n                <img alt={post.title} src={`/${post.slug}.jpg`} />\r\n                <span className={showStyles.topic}>{`s/${post.topic}`}</span>\r\n              </a>\r\n            </Link>\r\n            <span>posted by</span>\r\n            <Link href='/users/[...oneUser]' as={`/users/${post.postedBy._id}`}>\r\n              <a>\r\n                <span className={showStyles.name}>\r\n                  {post.postedBy.username}\r\n                </span>\r\n                <img\r\n                  className={showStyles.userPic}\r\n                  src={post.postedBy.photo}\r\n                  alt={post.postedBy.username}\r\n                />\r\n              </a>\r\n            </Link>\r\n          </div>\r\n          <div className={showStyles.postCore}>\r\n            <h1 className={showStyles.title}>{post.title}</h1>\r\n            {!editOpt &&\r\n              postContent.split('\\n').map((el, i) => (\r\n                <p\r\n                  style={el.length === 0 ? { height: '1rem' } : null}\r\n                  key={i}\r\n                  className={showStyles.content}\r\n                >\r\n                  {el}\r\n                </p>\r\n              ))}\r\n            {editOpt && (\r\n              <textarea\r\n                className={componentStyles.textArea}\r\n                onChange={(e) => setPostContent(e.target.value)}\r\n                value={postContent}\r\n              />\r\n            )}\r\n          </div>\r\n          {!editOpt && (\r\n            <img\r\n              alt='cover image'\r\n              className={showStyles.image}\r\n              src={post.coverImage}\r\n            />\r\n          )}\r\n          {editOpt && (\r\n            <div className={componentStyles.editWrap}>\r\n              <button onClick={editReset} className={componentStyles.cancel}>\r\n                Cancel\r\n              </button>\r\n              <button onClick={editPost} className={componentStyles.delete}>\r\n                Save\r\n              </button>\r\n            </div>\r\n          )}\r\n          {!editOpt && (\r\n            <div className={showStyles.actions}>\r\n              <div className={showStyles.showLikes}>\r\n                <LikeSet\r\n                  userId={data.userId}\r\n                  likes={post.likes}\r\n                  postID={post._id}\r\n                />\r\n              </div>\r\n              <div className={showStyles.comments}>\r\n                <CommentIcon />\r\n                <span className={showStyles.count}>{commCount}</span>\r\n                <span>\r\n                  {post.comments.length === 1 ? 'Comment' : 'Comments'}\r\n                </span>\r\n              </div>\r\n              <div\r\n                onClick={() => setBanner(true)}\r\n                style={{ padding: '1rem 0.6rem' }}\r\n              >\r\n                <MoreIcon />\r\n              </div>\r\n              <div\r\n                onClick={() => setBanner(false)}\r\n                style={banner ? null : { display: 'none' }}\r\n                className={componentStyles.moreBanner}\r\n              >\r\n                <SaveOption postID={post._id} />\r\n                <CopyOption />\r\n                {data.userPosts.includes(post._id) && (\r\n                  <EditOption activation={setEditOpt} />\r\n                )}\r\n                {data.userPosts.includes(post._id) && (\r\n                  <DeleteOption activation={setDeleteOpt} />\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div\r\n            onClick={() => setBanner(false)}\r\n            className={banner ? componentStyles.transparentLayer : null}\r\n          ></div>\r\n        </div>\r\n        {!editOpt && (\r\n          <form onSubmit={onSubmit} className={showStyles.createWrap}>\r\n            <input\r\n              onClick={() => setActive(true)}\r\n              onChange={(e) => setContent(e.target.value)}\r\n              value={content}\r\n              className={showStyles.createComm}\r\n              minLength='6'\r\n              maxLength='30'\r\n              type='text'\r\n              placeholder='Add new comment'\r\n            />\r\n            <div\r\n              style={active ? null : { display: 'none' }}\r\n              className={showStyles.btns}\r\n            >\r\n              <button className={showStyles.cancel} onClick={btnCancel}>\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type='submit'\r\n                className={`${showStyles.send} ${\r\n                  content.length > 5 ? showStyles.sendON : showStyles.sendOFF\r\n                }`}\r\n              >\r\n                Post\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n        {renderedComments}\r\n        {!editOpt && (\r\n          <CommentList userId={data.userId} comments={post.comments} />\r\n        )}\r\n      </div>\r\n      {errors}\r\n      {errs}\r\n      {ers}\r\n      <BottomBar />\r\n      {deleteOpt && (\r\n        <div\r\n          onClick={() => setDeleteOpt(false)}\r\n          className={componentStyles.layer}\r\n        ></div>\r\n      )}\r\n      {deleteOpt && (\r\n        <div className={componentStyles.deleteBanner}>\r\n          <p>Are you sure you want to delete this post?</p>\r\n          <div>\r\n            <button\r\n              className={componentStyles.cancel}\r\n              onClick={() => setDeleteOpt(false)}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button onClick={deletePost} className={componentStyles.delete}>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = async (ctx) => {\r\n  const { postId } = ctx.query;\r\n  const client = buildClient(ctx);\r\n  const { data } = await client.get(`/api/posts/${postId}`);\r\n\r\n  return {\r\n    props: {\r\n      ...data,\r\n      postId,\r\n    },\r\n  };\r\n};\r\n\r\nexport default PostShow;\r\n","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\premium.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\topics\\[topicSlug].js",["220"],"import TopBar from '../../components/bars/TopBar';\r\nimport SideBar from '../../components/bars/SideBar';\r\nimport BottomBar from '../../components/bars/BottomBar';\r\nimport Layer from '../../components/bars/Layer';\r\nimport PostList from '../../components/lists/PostList';\r\nimport buildClient from '../../api/build-client';\r\nimport topicStyles from '../../styles/Topic.module.css';\r\n\r\nconst TopicPosts = ({ data, topicSlug }) => {\r\n  return (\r\n    <div>\r\n      <TopBar />\r\n      <SideBar />\r\n      <Layer />\r\n      <div className={topicStyles.topicStripe}>\r\n        <div>\r\n          <img src={`/compress/${topicSlug}-big.jpg`} alt={topicSlug} />\r\n          <h2>{topicSlug}</h2>\r\n        </div>\r\n      </div>\r\n      <PostList\r\n        text=\"This topic doesn't have a post yet. Let's change it!\"\r\n        posts={data.posts}\r\n        userId={data.userId}\r\n      />\r\n      <BottomBar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = async (ctx) => {\r\n  const { topicSlug } = ctx.query;\r\n  const client = buildClient(ctx);\r\n  const { data } = await client.get(`/api/topics/${topicSlug}`);\r\n\r\n  return {\r\n    props: {\r\n      ...data,\r\n      topicSlug,\r\n    },\r\n  };\r\n};\r\n\r\nexport default TopicPosts;\r\n","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\users\\my-profile.js",["221"],"import Link from 'next/link';\r\nimport MoreIcon from '../../components/Icons/MoreIcon';\r\nimport PostList from '../../components/lists/PostList';\r\nimport buildClient from '../../api/build-client';\r\nimport ArrowBar from '../../components/bars/ArrowBar';\r\nimport BottomBar from '../../components/bars/BottomBar';\r\nimport myProfileStyles from '../../styles/myProfile.module.css';\r\n\r\nconst MyProfile = ({ data }) => {\r\n  return (\r\n    <div>\r\n      <ArrowBar\r\n        extra={\r\n          <MoreIcon\r\n            color={'#000'}\r\n            styling={{\r\n              transform: 'scale(1.2) rotate(90deg)',\r\n            }}\r\n          />\r\n        }\r\n        title='My profile'\r\n      />\r\n      <div className={myProfileStyles.userTop}>\r\n        <img\r\n          src={data.user.photo}\r\n          className={myProfileStyles.photo}\r\n          alt='profile photo'\r\n        />\r\n        <div className={myProfileStyles.description}>\r\n          <h1 className={myProfileStyles.name}>{data.user.username}</h1>\r\n          <p className={myProfileStyles.hobby}>{data.user.hobby}</p>\r\n          <Link href='/users/settings/update-my-profile'>\r\n            <a className={myProfileStyles.btns}>\r\n              <svg\r\n                width='13'\r\n                height='14'\r\n                viewBox='0 0 13 14'\r\n                fill='none'\r\n                xmlns='http://www.w3.org/2000/svg'\r\n              >\r\n                <path\r\n                  d='M0.711148 13.5768C0.612874 13.5766 0.515711 13.556 0.425836 13.5162C0.335962 13.4765 0.255343 13.4185 0.189107 13.3459C0.121672 13.2739 0.0702153 13.1885 0.0381102 13.0952C0.00600514 13.0019 -0.00602276 12.9029 0.00281499 12.8047L0.176357 10.8964L8.19327 2.88236L10.6986 5.38703L2.68386 13.4004L0.775607 13.5739C0.754178 13.5759 0.732667 13.5769 0.711148 13.5768ZM11.1987 4.88623L8.69406 2.38157L10.1964 0.879193C10.2622 0.813334 10.3403 0.761088 10.4263 0.725442C10.5123 0.689795 10.6045 0.671448 10.6976 0.671448C10.7907 0.671448 10.8828 0.689795 10.9688 0.725442C11.0548 0.761088 11.1329 0.813334 11.1987 0.879193L12.7011 2.38157C12.767 2.44735 12.8192 2.52547 12.8549 2.61146C12.8905 2.69745 12.9089 2.78963 12.9089 2.88271C12.9089 2.9758 12.8905 3.06797 12.8549 3.15396C12.8192 3.23995 12.767 3.31807 12.7011 3.38386L11.1994 4.88553L11.1987 4.88623Z'\r\n                  fill='white'\r\n                />\r\n              </svg>\r\n              Edit profile\r\n            </a>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className={myProfileStyles.stats}>\r\n        <div>\r\n          <p className={myProfileStyles.data}>{data.user.posts.length}</p>\r\n          <p className={myProfileStyles.legend}>Posts</p>\r\n        </div>\r\n        <div>\r\n          <p className={myProfileStyles.data}>{data.user.followers.length}</p>\r\n          <p className={myProfileStyles.legend}>Followers</p>\r\n        </div>\r\n        <div>\r\n          <p className={myProfileStyles.data}>{data.user.following.length}</p>\r\n          <p className={myProfileStyles.legend}>Following</p>\r\n        </div>\r\n      </div>\r\n      <PostList\r\n        userId={data.userId}\r\n        text='Here will be displayed your posts!'\r\n        posts={data.user.posts}\r\n      />\r\n      <BottomBar />\r\n      <style style={{ display: 'none' }}>\r\n        {`html::-webkit-scrollbar{width:1.6rem}html::-webkit-scrollbar-track{background:#fff;border-radius:100vw}html::-webkit-scrollbar-thumb{background:#545454;border:.4em solid #fff;border-radius:100vw;transition:all .3s}html::-webkit-scrollbar-thumb:hover{background:#6d6d6d}`}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = async (ctx) => {\r\n  const client = buildClient(ctx);\r\n  const { data } = await client.get('/api/users/my-profile/');\r\n\r\n  return {\r\n    props: {\r\n      data,\r\n    },\r\n  };\r\n};\r\n\r\nexport default MyProfile;\r\n","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\users\\notifications.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\users\\settings\\saved-posts.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\users\\settings\\update-my-profile.js",["222"],"import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Link from 'next/link';\r\nimport Router from 'next/router';\r\nimport Cookies from 'js-cookie';\r\nimport generalError from '../../../styles/Error.module.css';\r\nimport buildClient from '../../../api/build-client';\r\nimport editStyles from '../../../styles/EditProfile.module.css';\r\nimport componentStyles from '../../../styles/Components.module.css';\r\n\r\nconst UpdateMyProfile = ({ data }) => {\r\n  const [errors, setErrors] = useState(null);\r\n  const [photo, setProfilePhoto] = useState(data.photo);\r\n  const [username, setUsername] = useState(data.username);\r\n  const [hobby, setHobby] = useState(data.hobby);\r\n  const [email, setEmail] = useState(data.email);\r\n\r\n  const doRequest = (url = data.photo) => {\r\n    axios({\r\n      url: '/api/users/update-my-profile',\r\n      method: 'put',\r\n      data: {\r\n        photo: url,\r\n        username,\r\n        hobby,\r\n        email,\r\n      },\r\n      headers: { Authorization: 'Bearer ' + Cookies.get('jwt') },\r\n    })\r\n      .then(() => Router.push('/users/my-profile'))\r\n      .catch(({ response: { data } }) =>\r\n        setErrors(\r\n          <div className={generalError.errorBanner}>\r\n            <h4>Ooops....</h4>\r\n            <ul style={{ listStyle: 'none' }}>\r\n              {data.message.split(',').map((message) => (\r\n                <li key={message}>\r\n                  {message.replace('Validation failed:', '').split(':')[1]}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )\r\n      );\r\n  };\r\n\r\n  const handleFileInputChange = (e) => {\r\n    previewFile(e.target.files[0]);\r\n    setProfilePhoto(e.target.files[0]);\r\n  };\r\n\r\n  const previewFile = (file) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      setProfilePhoto(reader.result);\r\n    };\r\n  };\r\n\r\n  const resetImg = () => {\r\n    setProfilePhoto(data.photo);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!username || !hobby || !email) {\r\n      return;\r\n    }\r\n\r\n    const body = new FormData();\r\n    body.append('file', photo);\r\n    body.append('upload_preset', 'storytell');\r\n\r\n    if (photo !== data.photo) {\r\n      const res = await axios({\r\n        method: 'post',\r\n        url: 'https://api.cloudinary.com/v1_1/ekoeko/image/upload',\r\n        data: body,\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n\r\n      doRequest(res.data.url);\r\n    } else {\r\n      doRequest();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={editStyles.bar}>\r\n        <Link href='/users/my-profile'>\r\n          <a style={{ height: '2rem' }}>\r\n            <svg\r\n              width='20'\r\n              height='20'\r\n              viewBox='0 0 20 20'\r\n              fill='none'\r\n              xmlns='http://www.w3.org/2000/svg'\r\n            >\r\n              <path\r\n                d='M10 10L19 19M1 19L10 10L1 19ZM19 1L9.99828 10L19 1ZM9.99828 10L1 1L9.99828 10Z'\r\n                stroke='black'\r\n                strokeWidth='2'\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'\r\n              />\r\n            </svg>\r\n          </a>\r\n        </Link>\r\n        <h2>Edit profile</h2>\r\n      </div>\r\n      <form onSubmit={onSubmit} className={editStyles.wrap}>\r\n        <div className={editStyles.imgWrap}>\r\n          <div style={{ position: 'relative' }}>\r\n            <img className={editStyles.img} src={photo} alt='profile picture' />\r\n            {photo !== data.photo && (\r\n              <div onClick={resetImg} className={editStyles.close}>\r\n                <svg\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  width='24'\r\n                  height='24'\r\n                  viewBox='0 0 24 24'\r\n                  fill='none'\r\n                  stroke='#ff2f2f'\r\n                  strokeWidth='2'\r\n                  strokeLinecap='round'\r\n                  strokeLinejoin='round'\r\n                >\r\n                  <line x1='18' y1='6' x2='6' y2='18'></line>\r\n                  <line x1='6' y1='6' x2='18' y2='18'></line>\r\n                </svg>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <input\r\n            onChange={handleFileInputChange}\r\n            id='image'\r\n            accept='image/*'\r\n            type='file'\r\n            name='image'\r\n            value=''\r\n          />\r\n          <label htmlFor='image'>Choose an image</label>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <h2>Username</h2>\r\n            <input\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              className={componentStyles.textInput}\r\n              type='text'\r\n              minLength='4'\r\n              maxLength='14'\r\n            />\r\n          </div>\r\n          <div>\r\n            <h2>Your hobby</h2>\r\n            <input\r\n              value={hobby}\r\n              onChange={(e) => setHobby(e.target.value)}\r\n              className={componentStyles.textInput}\r\n              type='text'\r\n              minLength='2'\r\n              maxLength='18'\r\n            />\r\n          </div>\r\n          <div>\r\n            <h2>Email</h2>\r\n            <input\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className={componentStyles.textInput}\r\n              type='email'\r\n            />\r\n          </div>\r\n        </div>\r\n        <button type='submit' className={componentStyles.applyBtn}>\r\n          Save\r\n        </button>\r\n      </form>\r\n      {errors}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = async (ctx) => {\r\n  const client = buildClient(ctx);\r\n  const { data } = await client.get('/api/users/brief-user');\r\n\r\n  return {\r\n    props: {\r\n      data,\r\n    },\r\n  };\r\n};\r\n\r\nexport default UpdateMyProfile;\r\n","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\users\\settings\\update-password.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\users\\[...oneUser].js",["223","224"],"import { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport Cookies from 'js-cookie';\r\nimport useRequest from '../../hooks/use-request';\r\nimport buildClient from '../../api/build-client';\r\nimport PostList from '../../components/lists/PostList';\r\nimport ArrowBar from '../../components/bars/ArrowBar';\r\nimport oneUserStyles from '../../styles/OneUser.module.css';\r\n\r\nconst OneUser = ({ data }) => {\r\n  const [active, setActive] = useState(false);\r\n  const [followers, setFollowers] = useState(data.user.followers.length);\r\n\r\n  const { doRequest, errors } = useRequest({\r\n    url: `/api/users/${active ? 'unfollow' : 'follow'}/${data.user._id}`,\r\n    method: 'put',\r\n    headers: { Authorization: 'Bearer ' + Cookies.get('jwt') },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data.user.followers.includes(data.userId)) {\r\n      setActive(true);\r\n    }\r\n  }, []);\r\n\r\n  const follow = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (active) {\r\n      setFollowers((oldState) => oldState - 1);\r\n    } else {\r\n      setFollowers((oldState) => oldState + 1);\r\n    }\r\n\r\n    doRequest();\r\n\r\n    setActive(!active);\r\n  };\r\n  return (\r\n    <div>\r\n      <ArrowBar title='User profile' />\r\n      <div className={oneUserStyles.wrapper}>\r\n        <div className={oneUserStyles.userTop}>\r\n          <img\r\n            src={data.user.photo}\r\n            className={oneUserStyles.photo}\r\n            alt='profile photo'\r\n          />\r\n          <div className={oneUserStyles.description}>\r\n            <h1 className={oneUserStyles.name}>{data.user.username}</h1>\r\n            <p className={oneUserStyles.hobby}>{data.user.hobby}</p>\r\n            <div className={oneUserStyles.btns}>\r\n              {data.user._id !== data.userId && (\r\n                <button\r\n                  style={\r\n                    active\r\n                      ? { backgroundColor: '#000' }\r\n                      : { backgroundColor: '#FF2F2F' }\r\n                  }\r\n                  onClick={follow}\r\n                  className={oneUserStyles.follow}\r\n                >\r\n                  {active ? 'Following' : 'Follow'}\r\n                </button>\r\n              )}\r\n              {data.user._id !== data.userId && (\r\n                <button className={oneUserStyles.chat}>Chat</button>\r\n              )}\r\n              {data.user._id === data.userId && (\r\n                <Link href='/users/settings/update-my-profile'>\r\n                  <a className={oneUserStyles.editMyProfile}>\r\n                    <svg\r\n                      width='13'\r\n                      height='14'\r\n                      viewBox='0 0 13 14'\r\n                      fill='none'\r\n                      xmlns='http://www.w3.org/2000/svg'\r\n                    >\r\n                      <path\r\n                        d='M0.711148 13.5768C0.612874 13.5766 0.515711 13.556 0.425836 13.5162C0.335962 13.4765 0.255343 13.4185 0.189107 13.3459C0.121672 13.2739 0.0702153 13.1885 0.0381102 13.0952C0.00600514 13.0019 -0.00602276 12.9029 0.00281499 12.8047L0.176357 10.8964L8.19327 2.88236L10.6986 5.38703L2.68386 13.4004L0.775607 13.5739C0.754178 13.5759 0.732667 13.5769 0.711148 13.5768ZM11.1987 4.88623L8.69406 2.38157L10.1964 0.879193C10.2622 0.813334 10.3403 0.761088 10.4263 0.725442C10.5123 0.689795 10.6045 0.671448 10.6976 0.671448C10.7907 0.671448 10.8828 0.689795 10.9688 0.725442C11.0548 0.761088 11.1329 0.813334 11.1987 0.879193L12.7011 2.38157C12.767 2.44735 12.8192 2.52547 12.8549 2.61146C12.8905 2.69745 12.9089 2.78963 12.9089 2.88271C12.9089 2.9758 12.8905 3.06797 12.8549 3.15396C12.8192 3.23995 12.767 3.31807 12.7011 3.38386L11.1994 4.88553L11.1987 4.88623Z'\r\n                        fill='white'\r\n                      />\r\n                    </svg>\r\n                    Edit profile\r\n                  </a>\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={oneUserStyles.stats}>\r\n          <div>\r\n            <p className={oneUserStyles.data}>{data.user.posts.length}</p>\r\n            <p className={oneUserStyles.legend}>Posts</p>\r\n          </div>\r\n          <div>\r\n            <p className={oneUserStyles.data}>{followers}</p>\r\n            <p className={oneUserStyles.legend}>Followers</p>\r\n          </div>\r\n          <div>\r\n            <p className={oneUserStyles.data}>{data.user.following.length}</p>\r\n            <p className={oneUserStyles.legend}>Following</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <PostList\r\n        text=\"Current user doesn't have any posts\"\r\n        posts={data.user.posts}\r\n        userId={data.userId}\r\n      />\r\n      {errors}\r\n      <style style={{ display: 'none' }}>\r\n        {`html::-webkit-scrollbar{width:1.6rem}html::-webkit-scrollbar-track{background:#fff;border-radius:100vw}html::-webkit-scrollbar-thumb{background:#545454;border:.4em solid #fff;border-radius:100vw;transition:all .3s}html::-webkit-scrollbar-thumb:hover{background:#6d6d6d}`}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = async (ctx) => {\r\n  const { oneUser } = ctx.query;\r\n  const client = buildClient(ctx);\r\n  const { data } = await client.get(`/api/users/${oneUser}`);\r\n\r\n  return {\r\n    props: {\r\n      data,\r\n      oneUser,\r\n    },\r\n  };\r\n};\r\n\r\nexport default OneUser;\r\n","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\_app.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\pages\\_document.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bannerOptions\\ChangePasswordOption.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bannerOptions\\CopyOption.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bannerOptions\\DeleteOption.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bannerOptions\\EditOption.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bannerOptions\\SavedOptions.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bannerOptions\\SaveOption.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bars\\ArrowBar.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bars\\BottomBar.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bars\\Layer.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bars\\SideBar.js",["225","226","227","228","229"],"import Link from 'next/link';\r\nimport { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalCtx';\r\nimport BarStyles from '../../styles/Bar.module.css';\r\n\r\nconst SideBar = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n  const { sidebar, setSidebar, setRotateDots } = useContext(GlobalContext);\r\n  const scrollStyle = `html::-webkit-scrollbar{width:1.6rem}html::-webkit-scrollbar-track{background:#fff;border-radius:100vw}html::-webkit-scrollbar-thumb{background:#545454;border:.4em solid #fff;border-radius:100vw;transition:all .3s}html::-webkit-scrollbar-thumb:hover{background:#6d6d6d}`;\r\n  const close = () => {\r\n    setSidebar(false);\r\n    setRotateDots(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${BarStyles.sidebar} ${\r\n        sidebar ? BarStyles.open : BarStyles.close\r\n      }`}\r\n    >\r\n      <style style={{ display: 'none' }}>\r\n        {sidebar ? `body {overflow: hidden;}` : scrollStyle}\r\n      </style>\r\n      <h3>Storytell</h3>\r\n      <Link href='/posts'>\r\n        <a onClick={close}>\r\n          <svg\r\n            width='21'\r\n            height='19'\r\n            viewBox='0 0 21 19'\r\n            fill='none'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n          >\r\n            <path\r\n              d='M20.4153 10.4558H18.4925V17.3558C18.4925 17.8675 18.2694 18.5058 17.3425 18.5058H12.7425V11.6058H8.14249V18.5058H3.54249C2.61559 18.5058 2.39249 17.8675 2.39249 17.3558V10.4558H0.469692C-0.218008 10.4558 -0.0708078 10.0832 0.400692 9.5956L9.62829 0.3588C9.85254 0.1265 10.1469 0.0115 10.4425 0C10.738 0.0115 11.0324 0.12535 11.2567 0.3588L20.4831 9.59445C20.9558 10.0832 21.103 10.4558 20.4153 10.4558Z'\r\n              fill='black'\r\n            />\r\n          </svg>\r\n          <span>Home</span>\r\n        </a>\r\n      </Link>\r\n      <Link href='/premium'>\r\n        <a onClick={close}>\r\n          <svg\r\n            width='22'\r\n            height='18'\r\n            viewBox='0 0 22 18'\r\n            fill='none'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n          >\r\n            <path\r\n              d='M18.15 15.4H3.85C3.5475 15.4 3.3 15.6475 3.3 15.95V17.05C3.3 17.3525 3.5475 17.6 3.85 17.6H18.15C18.4525 17.6 18.7 17.3525 18.7 17.05V15.95C18.7 15.6475 18.4525 15.4 18.15 15.4ZM20.35 4.4C19.4391 4.4 18.7 5.13906 18.7 6.05C18.7 6.29406 18.755 6.52094 18.8513 6.73063L16.3625 8.2225C15.8331 8.53875 15.1491 8.36 14.8431 7.82375L12.0416 2.92188C12.4094 2.61937 12.65 2.16563 12.65 1.65C12.65 0.739063 11.9109 0 11 0C10.0891 0 9.35 0.739063 9.35 1.65C9.35 2.16563 9.59063 2.61937 9.95844 2.92188L7.15688 7.82375C6.85094 8.36 6.16344 8.53875 5.6375 8.2225L3.15219 6.73063C3.245 6.52438 3.30344 6.29406 3.30344 6.05C3.30344 5.13906 2.56438 4.4 1.65344 4.4C0.7425 4.4 0 5.13906 0 6.05C0 6.96094 0.739063 7.7 1.65 7.7C1.73938 7.7 1.82875 7.68625 1.91469 7.6725L4.4 14.3H17.6L20.0853 7.6725C20.1712 7.68625 20.2606 7.7 20.35 7.7C21.2609 7.7 22 6.96094 22 6.05C22 5.13906 21.2609 4.4 20.35 4.4Z'\r\n              fill='black'\r\n            />\r\n          </svg>\r\n          <span>Get Storytell Pro</span>\r\n        </a>\r\n      </Link>\r\n      <Link href={{ pathname: '/posts/create-post', query: { q: 'feedback' } }}>\r\n        <a onClick={close}>\r\n          <svg\r\n            width='19'\r\n            height='19'\r\n            viewBox='0 0 19 19'\r\n            fill='none'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n          >\r\n            <path\r\n              d='M16.5 0.75H2.5C1.5375 0.75 0.75875 1.5375 0.75875 2.5L0.75 18.25L4.25 14.75H16.5C17.4625 14.75 18.25 13.9625 18.25 13V2.5C18.25 1.5375 17.4625 0.75 16.5 0.75ZM10.375 11.25H8.625V9.5H10.375V11.25ZM10.375 7.75H8.625V4.25H10.375V7.75Z'\r\n              fill='black'\r\n            />\r\n          </svg>\r\n          <span>Send feedback</span>\r\n        </a>\r\n      </Link>\r\n      <div>\r\n        <svg\r\n          width='18'\r\n          height='18'\r\n          viewBox='0 0 18 18'\r\n          fill='none'\r\n          xmlns='http://www.w3.org/2000/svg'\r\n        >\r\n          <path\r\n            d='M9 0C7.21997 0 5.47991 0.527841 3.99987 1.51677C2.51983 2.50571 1.36628 3.91131 0.685088 5.55585C0.00389951 7.20038 -0.17433 9.00998 0.172937 10.7558C0.520203 12.5016 1.37737 14.1053 2.63604 15.364C3.89472 16.6226 5.49836 17.4798 7.24419 17.8271C8.99002 18.1743 10.7996 17.9961 12.4442 17.3149C14.0887 16.6337 15.4943 15.4802 16.4832 14.0001C17.4722 12.5201 18 10.78 18 9C18 8.54 17.96 8.08 17.9 7.64C17.4003 8.34066 16.7401 8.91146 15.9746 9.30465C15.2091 9.69784 14.3606 9.90198 13.5 9.9C12.3552 9.90003 11.24 9.53643 10.3152 8.86166C9.39041 8.18688 8.70385 7.23581 8.35454 6.14561C8.00523 5.05541 8.01123 3.88243 8.37167 2.79586C8.73211 1.70928 9.42836 0.765281 10.36 0.0999999C9.92 0.0399999 9.46 0 9 0Z'\r\n            fill='black'\r\n          />\r\n        </svg>\r\n        <span>Dark mode</span>\r\n        <div\r\n          onClick={() => setToggle((oldState) => !oldState)}\r\n          className={BarStyles.toggle}\r\n        >\r\n          <div className={toggle ? BarStyles.dark : BarStyles.white}></div>\r\n        </div>\r\n      </div>\r\n      <Link href='/auth/signout'>\r\n        <a onClick={close}>\r\n          <svg\r\n            width='18'\r\n            height='18'\r\n            viewBox='0 0 18 18'\r\n            fill='none'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n          >\r\n            <path\r\n              d='M3 0C2.20435 0 1.44129 0.316071 0.87868 0.87868C0.316071 1.44129 0 2.20435 0 3V15C0 15.7956 0.316071 16.5587 0.87868 17.1213C1.44129 17.6839 2.20435 18 3 18H8C8.26522 18 8.51957 17.8946 8.70711 17.7071C8.89464 17.5196 9 17.2652 9 17C9 16.7348 8.89464 16.4804 8.70711 16.2929C8.51957 16.1054 8.26522 16 8 16H3C2.73478 16 2.48043 15.8946 2.29289 15.7071C2.10536 15.5196 2 15.2652 2 15V3C2 2.73478 2.10536 2.48043 2.29289 2.29289C2.48043 2.10536 2.73478 2 3 2H8C8.26522 2 8.51957 1.89464 8.70711 1.70711C8.89464 1.51957 9 1.26522 9 1C9 0.734784 8.89464 0.48043 8.70711 0.292893C8.51957 0.105357 8.26522 0 8 0H3Z'\r\n              fill='#FF4040'\r\n            />\r\n            <path\r\n              d='M12.293 4.29303C12.4805 4.10556 12.7348 4.00024 13 4.00024C13.2652 4.00024 13.5195 4.10556 13.707 4.29303L17.707 8.29303C17.8945 8.48056 17.9998 8.73487 17.9998 9.00003C17.9998 9.26519 17.8945 9.5195 17.707 9.70703L13.707 13.707C13.5184 13.8892 13.2658 13.99 13.0036 13.9877C12.7414 13.9854 12.4906 13.8803 12.3052 13.6948C12.1198 13.5094 12.0146 13.2586 12.0123 12.9964C12.01 12.7342 12.1108 12.4816 12.293 12.293L14.586 10H7C6.73478 10 6.48043 9.89467 6.29289 9.70714C6.10536 9.5196 6 9.26525 6 9.00003C6 8.73481 6.10536 8.48046 6.29289 8.29292C6.48043 8.10539 6.73478 8.00003 7 8.00003H14.586L12.293 5.70703C12.1055 5.5195 12.0002 5.26519 12.0002 5.00003C12.0002 4.73487 12.1055 4.48056 12.293 4.29303Z'\r\n              fill='#FF4040'\r\n            />\r\n          </svg>\r\n          <span style={{ color: '#FF4040' }}>Log out</span>\r\n        </a>\r\n      </Link>\r\n      <h3>Popular topics</h3>\r\n      <Link href='/topics/[topicSlug]' as={'/topics/fitness'}>\r\n        <a onClick={close}>\r\n          <img src='/fitness.jpg' alt='fitness' />\r\n          <span>s/Fitness</span>\r\n        </a>\r\n      </Link>\r\n      <Link href='/topics/[topicSlug]' as={'/topics/startups'}>\r\n        <a onClick={close}>\r\n          <img src='/startups.jpg' alt='startups' />\r\n          <span>s/Startups</span>\r\n        </a>\r\n      </Link>\r\n      <Link href='/topics/[topicSlug]' as={'/topics/language'}>\r\n        <a onClick={close}>\r\n          <img src='/language.jpg' alt='language' />\r\n          <span>s/Language</span>\r\n        </a>\r\n      </Link>\r\n      <Link href='/topics/[topicSlug]' as={'/topics/school'}>\r\n        <a onClick={close}>\r\n          <img src='/school.jpg' alt='school' />\r\n          <span>s/School</span>\r\n        </a>\r\n      </Link>\r\n      <Link href='/topics/[topicSlug]' as={'/topics/traveling'}>\r\n        <a onClick={close}>\r\n          <img src='/traveling.jpg' alt='traveling' />\r\n          <span>s/Traveling</span>\r\n        </a>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nexport default SideBar;\r\n","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\bars\\TopBar.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\activity\\CommentType.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\activity\\FollowType.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\activity\\LikeType.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\ArrowIcon.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\CommentIcon.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\CopyLinkIcon.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\DeleteIcon.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\EditIcon.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\LikeSet.js",["230"],"import { Fragment, useState, useEffect } from 'react';\r\nimport rateLimit from 'axios-rate-limit';\r\nimport generalError from '../../styles/Error.module.css';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst LikeSet = ({ postID, likes, greyColor, userId }) => {\r\n  const [likeCount, setLikeCount] = useState(likes.length);\r\n  const [active, setActive] = useState(false);\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (likes.includes(userId)) {\r\n      setActive(true);\r\n    }\r\n  }, []);\r\n\r\n  const doRequest = async (path) => {\r\n    const http = rateLimit(axios.create(), {\r\n      maxRequests: 1,\r\n      perMilliseconds: 4000,\r\n      maxRPS: 4,\r\n    });\r\n    try {\r\n      await http({\r\n        url: `/api/upvotes/${postID}/${path}`,\r\n        headers: { Authorization: 'Bearer ' + Cookies.get('jwt') },\r\n        method: 'put',\r\n      });\r\n    } catch (err) {\r\n      setErrors(\r\n        <div className={generalError.errorBanner}>\r\n          <h4>Ooops....</h4>\r\n          <ul style={{ listStyle: 'none' }}>\r\n            {err.response.data.errors.map((err) => (\r\n              <li key={err.message}>{err.message}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const doLike = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (likes.includes(userId)) {\r\n      setActive(false);\r\n      doRequest('unlike');\r\n      setLikeCount((oldState) => oldState - 1);\r\n    } else {\r\n      setActive(true);\r\n      doRequest('like');\r\n      setLikeCount((oldState) => oldState + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <svg\r\n        onClick={doLike}\r\n        width='18'\r\n        height='17'\r\n        viewBox='0 0 18 17'\r\n        fill='none'\r\n        xmlns='http://www.w3.org/2000/svg'\r\n      >\r\n        <path\r\n          d='M1 8.17983L9 1.19062L17 8.17983'\r\n          stroke={active ? '#59BAB7' : '#878A8C'}\r\n          strokeWidth='2'\r\n          strokeLinecap='round'\r\n          strokeLinejoin='round'\r\n        />\r\n        <path\r\n          d='M1 15.169L9 8.17982L17 15.169'\r\n          stroke={active ? '#59BAB7' : '#878A8C'}\r\n          strokeWidth='2'\r\n          strokeLinecap='round'\r\n          strokeLinejoin='round'\r\n        />\r\n      </svg>\r\n      <span style={{ margin: '0 0.8rem', ...greyColor }}>{likeCount}</span>\r\n      {errors}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LikeSet;\r\n","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\LogoIcon.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\MoreIcon.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\NewPostIcon.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\NotifitcationIcon.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\ProfileIcon.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\SaveIcon.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\Icons\\UnsaveIcon.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\items\\Activity.js",["231","232","233"],"import Link from 'next/link';\r\nimport formatDistance from 'date-fns/formatDistance';\r\nimport LikeType from '../Icons/activity/LikeType';\r\nimport CommentType from '../Icons/activity/CommentType';\r\nimport FollowType from '../Icons/activity/FollowType';\r\nimport activityStyles from '../../styles/Activity.module.css';\r\n\r\nconst Activity = ({ activity }) => {\r\n  return (\r\n    <div className={activityStyles.activityWrapper}>\r\n      <Link href='/users/[...oneUser]' as={`/users/${activity.user._id}`}>\r\n        <a>\r\n          <img\r\n            className={activityStyles.profilePic}\r\n            src={activity.user.photo}\r\n            alt={activity.user.username}\r\n          />\r\n        </a>\r\n      </Link>\r\n      {activity.type.startsWith('liked') ? (\r\n        <LikeType />\r\n      ) : activity.type.startsWith('commented') ? (\r\n        <CommentType />\r\n      ) : (\r\n        <FollowType />\r\n      )}\r\n      <div className={activityStyles.text}>\r\n        <p className={activityStyles.message}>\r\n          The user{' '}\r\n          <Link href='/users/[...oneUser]' as={`/users/${activity.user._id}`}>\r\n            <a style={{ textDecoration: 'none', color: '#000' }}>\r\n              <strong>{activity.user.username}</strong>\r\n            </a>\r\n          </Link>\r\n          {' ' + activity.type}\r\n        </p>\r\n        <span className={activityStyles.time}>\r\n          {formatDistance(new Date(activity.createdAt), new Date(), {\r\n            addSuffix: true,\r\n          })\r\n            .replace('about', '')\r\n            .replace('less than', '')}\r\n        </span>\r\n      </div>\r\n      {activity.post && (\r\n        <Link href='/posts/[...postId]' as={`/posts/${activity.post._id}`}>\r\n          <a>\r\n            {activity.post.coverImage ? (\r\n              <img\r\n                className={activityStyles.imageLeft}\r\n                src={activity.post.coverImage}\r\n                alt='post photo'\r\n              />\r\n            ) : (\r\n              <img\r\n                className={activityStyles.topicLeft}\r\n                src={`/${activity.topic}.png`}\r\n                alt='post photo'\r\n              />\r\n            )}\r\n          </a>\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\items\\Comment.js",["234"],"import { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport Cookies from 'js-cookie';\r\nimport useRequest from '../../hooks/use-request';\r\nimport commentStyles from '../../styles/Comment.module.css';\r\nimport componentStyles from '../../styles/Components.module.css';\r\nimport formatDistance from 'date-fns/formatDistance';\r\n\r\nconst Comment = ({ comment, userId }) => {\r\n  const [state, setState] = useState(true);\r\n\r\n  const { doRequest, errors } = useRequest({\r\n    url: `/api/comments/${comment._id}`,\r\n    method: 'delete',\r\n    headers: { Authorization: 'Bearer ' + Cookies.get('jwt') },\r\n  });\r\n\r\n  const deleteComment = (e) => {\r\n    e.preventDefault();\r\n    setState(false);\r\n    doRequest();\r\n  };\r\n\r\n  return (\r\n    <div className={state ? commentStyles.commentWrap : commentStyles.hide}>\r\n      {comment.postedBy._id === userId && (\r\n        <div onClick={deleteComment} className={componentStyles.Xmarker}>\r\n          <svg\r\n            width='12'\r\n            height='12'\r\n            viewBox='0 0 20 20'\r\n            fill='none'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n          >\r\n            <path\r\n              d='M10 10L19 19M1 19L10 10L1 19ZM19 1L9.99828 10L19 1ZM9.99828 10L1 1L9.99828 10Z'\r\n              stroke='black'\r\n              strokeWidth='2'\r\n              strokeLinecap='round'\r\n              strokeLinejoin='round'\r\n            />\r\n          </svg>\r\n        </div>\r\n      )}\r\n      <Link href='/users/[...oneUser]' as={`/users/${comment.postedBy._id}`}>\r\n        <a>\r\n          <img\r\n            className={commentStyles.pic}\r\n            src={comment.postedBy.photo}\r\n            alt={comment.postedBy.username}\r\n          />\r\n        </a>\r\n      </Link>\r\n      <div>\r\n        <div>\r\n          <Link\r\n            href='/users/[...oneUser]'\r\n            as={`/users/${comment.postedBy._id}`}\r\n          >\r\n            <a style={{ textDecoration: 'none' }}>\r\n              <span className={commentStyles.name}>\r\n                {comment.postedBy.username}\r\n              </span>\r\n            </a>\r\n          </Link>\r\n          <span className={commentStyles.time}>\r\n            {formatDistance(new Date(comment.createdAt), new Date(), {\r\n              addSuffix: true,\r\n            })\r\n              .replace('about', '')\r\n              .replace('less than', '')}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <p className={commentStyles.content} style={{ color: '#000' }}>\r\n            {comment.content}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {errors}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\items\\Post.js",["235","236","237"],"import { cloneElement, useState } from 'react';\r\nimport Link from 'next/link';\r\nimport LikeSet from '../Icons/LikeSet';\r\nimport SaveOption from '../../components/bannerOptions/SaveOption';\r\nimport CopyOption from '../../components/bannerOptions/CopyOption';\r\nimport DeleteOption from '../../components/bannerOptions/DeleteOption';\r\nimport EditOption from '../../components/bannerOptions/EditOption';\r\nimport postStyles from '../../styles/Post.module.css';\r\nimport componentStyles from '../../styles/Components.module.css';\r\nimport formatDistance from 'date-fns/formatDistance';\r\nimport CommentIcon from '../Icons/CommentIcon';\r\nimport MoreIcon from '../Icons/MoreIcon';\r\n\r\nconst Post = ({ post, UnsaveOption, userId }) => {\r\n  const [banner, setBanner] = useState(false);\r\n  const [state, setState] = useState(true);\r\n  const blackColor = { color: '#000' };\r\n  const whiteColor = { color: '#fff' };\r\n  const greyColor = { color: '#878a8c' };\r\n\r\n  return (\r\n    <div\r\n      className={`${state ? postStyles.post : postStyles.hide} ${\r\n        !post.coverImage ? postStyles.borda : ''\r\n      }`}\r\n    >\r\n      {UnsaveOption &&\r\n        cloneElement(UnsaveOption, {\r\n          postId: post._id,\r\n          deleteOpt: setState,\r\n          Xposition: post.coverImage ? true : false,\r\n        })}\r\n      <Link href='/posts/[...postId]' as={`/posts/${post._id}`}>\r\n        <a\r\n          className={postStyles.postLink}\r\n          style={{ textDecoration: 'none', display: 'flex' }}\r\n        >\r\n          <div\r\n            className={\r\n              post.coverImage\r\n                ? postStyles.imagePosition\r\n                : postStyles.textPosition\r\n            }\r\n          >\r\n            <div\r\n              style={post.coverImage ? { paddingTop: '1.5rem' } : null}\r\n              className={postStyles.postTop}\r\n            >\r\n              <div style={{ display: 'flex', aligItems: 'center' }}>\r\n                <img\r\n                  style={{ marginRight: '0.5rem' }}\r\n                  className={postStyles.icon}\r\n                  alt={post.title}\r\n                  src={`/${post.slug}.jpg`}\r\n                />\r\n                <span\r\n                  style={post.coverImage ? whiteColor : blackColor}\r\n                  className={postStyles.topic}\r\n                >{`s/${post.topic}`}</span>\r\n              </div>\r\n              <span\r\n                style={post.coverImage ? whiteColor : greyColor}\r\n                className={postStyles.date}\r\n              >\r\n                {formatDistance(new Date(post.createdAt), new Date(), {\r\n                  addSuffix: true,\r\n                })\r\n                  .replace('about', '')\r\n                  .replace('less than', '')}\r\n              </span>\r\n              <div style={{ display: 'flex', aligItems: 'center' }}>\r\n                <img\r\n                  style={{ marginRight: '0.5rem' }}\r\n                  src={post.postedBy.photo}\r\n                  className={postStyles.icon}\r\n                  alt='profile photo'\r\n                />\r\n                <p\r\n                  style={post.coverImage ? whiteColor : blackColor}\r\n                  className={postStyles.topic}\r\n                >\r\n                  {post.postedBy.username}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={post.coverImage ? { padding: '1rem 0' } : null}\r\n              className={postStyles.postContent}\r\n            >\r\n              <h2 style={post.coverImage ? whiteColor : blackColor}>\r\n                {post.title}\r\n              </h2>\r\n            </div>\r\n            <div>\r\n              <p className={postStyles.text}>\r\n                {post.content.slice(0, 100).trim()}...\r\n              </p>\r\n            </div>\r\n            {!post.coverImage && (\r\n              <div className={postStyles.postBottom}>\r\n                <div>\r\n                  <LikeSet\r\n                    userId={userId}\r\n                    likes={post.likes}\r\n                    greyColor={greyColor}\r\n                    postID={post._id}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <CommentIcon />\r\n                  <span style={{ marginLeft: '0.8rem', ...greyColor }}>\r\n                    Comments\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <MoreIcon />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {post.coverImage && (\r\n            <img\r\n              className={postStyles.coverImage}\r\n              src={post.coverImage}\r\n              alt={post.title}\r\n            />\r\n          )}\r\n        </a>\r\n      </Link>\r\n      {post.coverImage && (\r\n        <div\r\n          className={`${postStyles.postBottom} ${postStyles.anotherActions}`}\r\n        >\r\n          <div>\r\n            <LikeSet userId={userId} likes={post.likes} greyColor={greyColor} />\r\n          </div>\r\n          <div>\r\n            <CommentIcon />\r\n            <span style={{ marginLeft: '0.8rem', ...greyColor }}>Comments</span>\r\n          </div>\r\n          <div onClick={() => setBanner(true)}>\r\n            <MoreIcon />\r\n          </div>\r\n          {banner && (\r\n            <div\r\n              onClick={() => setBanner(false)}\r\n              className={componentStyles.moreBanner}\r\n            >\r\n              <SaveOption postID={post._id} />\r\n              <CopyOption />\r\n              {/* {data.userPosts.includes(post._id) && (\r\n                <EditOption activation={setEditOpt} />\r\n              )}\r\n              {data.userPosts.includes(post._id) && (\r\n                <DeleteOption activation={setDeleteOpt} />\r\n              )} */}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      <div\r\n        onClick={() => setBanner(false)}\r\n        className={banner ? componentStyles.transparentLayer : null}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\lists\\ActivityList.js",["238","239"],"import { useState, useEffect } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport useRequest from '../../hooks/use-request';\r\nimport Activity from '../items/Activity';\r\nimport activityStyles from '../../styles/Activity.module.css';\r\n\r\nconst ActivityList = ({ activities }) => {\r\n  const [active, setActive] = useState(true);\r\n  const [acsData, setAcsData] = useState([]);\r\n  const [page, nextPage] = useState(1);\r\n  const { doRequest, errors } = useRequest({\r\n    url: `/api/users/activities?page=${page}&limit=10`,\r\n    method: 'get',\r\n    headers: { Authorization: 'Bearer ' + Cookies.get('jwt') },\r\n  });\r\n  useEffect(() => {\r\n    if (activities.length < 10) {\r\n      return setActive(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setAcsData((oldState) => [...oldState, ...activities]);\r\n    nextPage((oldState) => oldState + 1);\r\n  }, []);\r\n\r\n  if (activities.length === 0) {\r\n    return (\r\n      <div className={activityStyles.noActivities}>\r\n        When a user likes your post, comments on your post or starts following\r\n        you. We will get you notified here 🔥 👍 👌\r\n      </div>\r\n    );\r\n  }\r\n  if (!activities) {\r\n    return (\r\n      <div data-center='center'>\r\n        <div className='wave'></div>\r\n        <div className='wave'></div>\r\n        <div className='wave'></div>\r\n        <div className='wave'></div>\r\n        <div className='wave'></div>\r\n        <div className='wave'></div>\r\n        <div className='wave'></div>\r\n        <div className='wave'></div>\r\n        <div className='wave'></div>\r\n        <div className='wave'></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const onClick = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { data } = await doRequest();\r\n    if (data) {\r\n      nextPage((oldState) => oldState + 1);\r\n      setAcsData((oldState) => [...oldState, ...data]);\r\n    }\r\n    if (data.length < 10) {\r\n      setActive(false);\r\n    }\r\n  };\r\n\r\n  const renderedList = acsData.map((activity) => (\r\n    <Activity key={activity._id} activity={activity} />\r\n  ));\r\n\r\n  return (\r\n    <div className={activityStyles.activityList}>\r\n      {renderedList}\r\n      <button\r\n        style={active ? null : { display: 'none' }}\r\n        onClick={onClick}\r\n        className={activityStyles.moreAcs}\r\n      >\r\n        Older Notifications\r\n      </button>\r\n      {errors}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivityList;\r\n","C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\lists\\CommentList.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\lists\\PostList.js",[],"C:\\Users\\Lenovo\\Desktop\\Codes\\storytell\\components\\SingleButton.js",[],{"ruleId":"240","severity":1,"message":"241","line":106,"column":17,"nodeType":"242","endLine":106,"endColumn":67},{"ruleId":"240","severity":1,"message":"241","line":116,"column":17,"nodeType":"242","endLine":120,"endColumn":19},{"ruleId":"240","severity":1,"message":"241","line":145,"column":13,"nodeType":"242","endLine":149,"endColumn":15},{"ruleId":"240","severity":1,"message":"241","line":17,"column":11,"nodeType":"242","endLine":17,"endColumn":73},{"ruleId":"240","severity":1,"message":"241","line":24,"column":9,"nodeType":"242","endLine":28,"endColumn":11},{"ruleId":"240","severity":1,"message":"241","line":116,"column":13,"nodeType":"242","endLine":116,"endColumn":81},{"ruleId":"243","severity":1,"message":"244","line":24,"column":6,"nodeType":"245","endLine":24,"endColumn":8,"suggestions":"246"},{"ruleId":"240","severity":1,"message":"241","line":44,"column":11,"nodeType":"242","endLine":48,"endColumn":13},{"ruleId":"240","severity":1,"message":"241","line":121,"column":11,"nodeType":"242","endLine":121,"endColumn":51},{"ruleId":"240","severity":1,"message":"241","line":127,"column":11,"nodeType":"242","endLine":127,"endColumn":53},{"ruleId":"240","severity":1,"message":"241","line":133,"column":11,"nodeType":"242","endLine":133,"endColumn":53},{"ruleId":"240","severity":1,"message":"241","line":139,"column":11,"nodeType":"242","endLine":139,"endColumn":49},{"ruleId":"240","severity":1,"message":"241","line":145,"column":11,"nodeType":"242","endLine":145,"endColumn":55},{"ruleId":"243","severity":1,"message":"247","line":16,"column":6,"nodeType":"245","endLine":16,"endColumn":8,"suggestions":"248"},{"ruleId":"240","severity":1,"message":"241","line":13,"column":11,"nodeType":"242","endLine":17,"endColumn":13},{"ruleId":"240","severity":1,"message":"241","line":49,"column":15,"nodeType":"242","endLine":53,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":55,"column":15,"nodeType":"242","endLine":59,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":47,"column":11,"nodeType":"242","endLine":51,"endColumn":13},{"ruleId":"240","severity":1,"message":"241","line":50,"column":17,"nodeType":"242","endLine":55,"endColumn":19},{"ruleId":"240","severity":1,"message":"241","line":72,"column":17,"nodeType":"242","endLine":77,"endColumn":19},{"ruleId":"240","severity":1,"message":"241","line":122,"column":13,"nodeType":"242","endLine":126,"endColumn":15},{"ruleId":"243","severity":1,"message":"249","line":20,"column":6,"nodeType":"245","endLine":20,"endColumn":8,"suggestions":"250"},{"ruleId":"243","severity":1,"message":"251","line":25,"column":6,"nodeType":"245","endLine":25,"endColumn":8,"suggestions":"252"},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See https://nextjs.org/docs/messages/no-img-element.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data.user.followers' and 'data.userId'. Either include them or remove the dependency array.","ArrayExpression",["253"],"React Hook useEffect has missing dependencies: 'likes' and 'userId'. Either include them or remove the dependency array.",["254"],"React Hook useEffect has a missing dependency: 'activities.length'. Either include it or remove the dependency array.",["255"],"React Hook useEffect has a missing dependency: 'activities'. Either include it or remove the dependency array. If 'setAcsData' needs the current value of 'activities', you can also switch to useReducer instead of useState and read 'activities' in the reducer.",["256"],{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [data.user.followers, data.userId]",{"range":"265","text":"266"},"Update the dependencies array to be: [likes, userId]",{"range":"267","text":"268"},"Update the dependencies array to be: [activities.length]",{"range":"269","text":"270"},"Update the dependencies array to be: [activities]",{"range":"271","text":"272"},[874,876],"[data.user.followers, data.userId]",[533,535],"[likes, userId]",[714,716],"[activities.length]",[852,854],"[activities]"]